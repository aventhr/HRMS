using AventWithMVC.Models;
using MySql.Data.MySqlClient;
using System;
using System.Collections.Generic;
using System.Configuration;
using System.Data;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Net;
using System.Net.Mail;
using System.Security.Cryptography;
using System.Text;
using System.Text.RegularExpressions;
using System.Web;
using System.Web.Mvc;

namespace AventWithMVC.Controllers
{
    public class EmployeeController : Controller
    {
        MySql.Data.MySqlClient.MySqlConnection conn;
        string myConnectionString = ConfigurationManager.ConnectionStrings["MySQL"].ConnectionString;
        // GET: Employee
        public ActionResult EmpOperations()
        {
            return View();
        }


        [HttpGet]
        public ActionResult IndexMethod()
        {
            if (Session["Roleid"] == null)
            {
                return RedirectToAction("Index", "Login");
            }
            return View();
        }

        public ActionResult AddEmployee()
        {
            //EmailSending();
            DataSet ds = new DataSet();

            ds = new DropdownController().Alldropdownbind();
            ds.Tables[0].TableName = "Jobtype";
            if (ds.Tables[0].Rows.Count != 0)
            {
                List<Dropdown> Objlistforjobtype = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[0].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[0].Rows[y]["Jobtypeid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[0].Rows[y]["Jobtype"]);
                    Objlistforjobtype.Add(Objddl);
                    ViewBag.Jobtype = Objlistforjobtype;
                }

            }

            if (ds.Tables[1].Rows.Count != 0)
            {
                List<Dropdown> Objlistforprobation = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[1].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[1].Rows[y]["Probationid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[1].Rows[y]["Probationtype"]);
                    Objlistforprobation.Add(Objddl);
                    ViewBag.Probation = Objlistforprobation;
                }

            }
            if (ds.Tables[2].Rows.Count != 0)
            {
                List<Dropdown> Objlistforjobtype = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[2].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[2].Rows[y]["Roleid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[2].Rows[y]["Rolename"]);
                    Objlistforjobtype.Add(Objddl);
                    ViewBag.Roles = Objlistforjobtype;
                }

            }
            //Alldropdownbind();
            return View();
        }
        [HttpPost]
        public ActionResult AddEmployee(Employee Objemp)
        {
            Objemp.EmpRegistrationPassword = RandomPassword.Generate();
            Objemp.Encryptionpassword = Encrypt(Objemp.EmpRegistrationPassword);
            //Objemp.EmpCode = AutogeneratedCode(Objemp.EmpCode);
            int i;
            try
            {
                DataSet ds = new DataSet();
                conn = new MySql.Data.MySqlClient.MySqlConnection(myConnectionString);
                conn.Open();
                string query = "sp_insnewemployee";
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@v_Empname", Objemp.Empname);
                cmd.Parameters.AddWithValue("@v_Empfathername", Objemp.Empfathername);
                cmd.Parameters.AddWithValue("@v_DOB", Objemp.DOB);
                cmd.Parameters.AddWithValue("@v_EmpDOJ", Objemp.EmpDOJ);
                cmd.Parameters.AddWithValue("@v_Empcontactnumber", Objemp.Empcontactnumber);
                cmd.Parameters.AddWithValue("@v_EmpPAN", Objemp.EmpPAN);
                cmd.Parameters.AddWithValue("@v_Empjobtype", Objemp.Empjobtype);
                cmd.Parameters.AddWithValue("@v_EmpProbationtype", Objemp.EmpProbationtype);
                cmd.Parameters.AddWithValue("@v_EmpGender", Objemp.EmpGender);
                cmd.Parameters.AddWithValue("@v_Presentaddrs", Objemp.Presentaddrs);
                cmd.Parameters.AddWithValue("@v_Permanentaddrs", Objemp.Permanentaddrs);
                cmd.Parameters.AddWithValue("@v_Email", Objemp.Email);
                cmd.Parameters.AddWithValue("@v_EmpDesignation", Objemp.EmpDesignation);
                cmd.Parameters.AddWithValue("@v_Encryptionpassword", Objemp.Encryptionpassword);
                cmd.Parameters.AddWithValue("@v_EmpDepartmenttype", Objemp.EmpDepartmenttype);
                cmd.Parameters.AddWithValue("@v_EmpCode", Objemp.EmpCode);
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Connection = conn;
                using (MySqlDataAdapter sda = new MySqlDataAdapter(cmd))
                {
                    sda.Fill(ds);
                    if (ds.Tables[0].Rows.Count != 0)
                    {
                        for (int y = 0; y < ds.Tables[0].Rows.Count; y++)
                        {
                            Objemp.Empname = Convert.ToString(ds.Tables[0].Rows[y]["Empname"]);
                            Objemp.Email = Convert.ToString(ds.Tables[0].Rows[y]["Email"]);
                            Objemp.EmpCode = Convert.ToString(ds.Tables[0].Rows[y]["EmpCode"]);
                            Objemp.EmpRegistrationPassword = Convert.ToString(ds.Tables[0].Rows[y]["EncryptionPassword"]);
                        }
                        EmailSending(Objemp);
                    }
                }
                conn.Close();
                return RedirectToAction("EmpOperations", "Employee");
            }
            catch (Exception ex)
            {
                return RedirectToAction("ApplyLeave", "Leave");
            }
        }

        public ActionResult AddEmployeeView()
        {
            //EmailSending();
            DataSet ds = new DataSet();

            ds = new DropdownController().Alldropdownbind();
            ds.Tables[0].TableName = "Jobtype";
            if (ds.Tables[0].Rows.Count != 0)
            {
                List<Dropdown> Objlistforjobtype = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[0].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[0].Rows[y]["Jobtypeid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[0].Rows[y]["Jobtype"]);
                    Objlistforjobtype.Add(Objddl);
                    ViewBag.Jobtype = Objlistforjobtype;
                }

            }

            if (ds.Tables[1].Rows.Count != 0)
            {
                List<Dropdown> Objlistforprobation = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[1].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[1].Rows[y]["Probationid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[1].Rows[y]["Probationtype"]);
                    Objlistforprobation.Add(Objddl);
                    ViewBag.Probation = Objlistforprobation;
                }

            }
            if (ds.Tables[2].Rows.Count != 0)
            {
                List<Dropdown> Objlistforjobtype = new List<Dropdown>();
                for (int y = 0; y < ds.Tables[2].Rows.Count; y++)
                {
                    Dropdown Objddl = new Dropdown();
                    Objddl.ddlvalue = Convert.ToInt32(ds.Tables[2].Rows[y]["Roleid"]);
                    Objddl.ddltext = Convert.ToString(ds.Tables[2].Rows[y]["Rolename"]);
                    Objlistforjobtype.Add(Objddl);
                    ViewBag.Roles = Objlistforjobtype;
                }

            }
            //Alldropdownbind();
            return View();
        }
        [HttpPost]
        public ActionResult AddEmployeeView(Employee Objemp)
        {
            Objemp.EmpRegistrationPassword = RandomPassword.Generate();
            Objemp.Encryptionpassword = Encrypt(Objemp.EmpRegistrationPassword);
            //Objemp.EmpCode = AutogeneratedCode(Objemp.EmpCode);
            int i;
            try
            {
                DataSet ds = new DataSet();
                conn = new MySql.Data.MySqlClient.MySqlConnection(myConnectionString);
                conn.Open();
                string query = "sp_insnewemployee";
                MySqlCommand cmd = new MySqlCommand(query, conn);
                cmd.Parameters.AddWithValue("@v_Empname", Objemp.Empname);
                cmd.Parameters.AddWithValue("@v_Empfathername", Objemp.Empfathername);
                cmd.Parameters.AddWithValue("@v_DOB", Objemp.DOB);
                cmd.Parameters.AddWithValue("@v_EmpDOJ", Objemp.EmpDOJ);
                cmd.Parameters.AddWithValue("@v_Empcontactnumber", Objemp.Empcontactnumber);
                cmd.Parameters.AddWithValue("@v_EmpPAN", Objemp.EmpPAN);
                cmd.Parameters.AddWithValue("@v_Empjobtype", Objemp.Empjobtype);
                cmd.Parameters.AddWithValue("@v_EmpProbationtype", Objemp.EmpProbationtype);
                cmd.Parameters.AddWithValue("@v_EmpGender", Objemp.EmpGender);
                cmd.Parameters.AddWithValue("@v_Presentaddrs", Objemp.Presentaddrs);
                cmd.Parameters.AddWithValue("@v_Permanentaddrs", Objemp.Permanentaddrs);
                cmd.Parameters.AddWithValue("@v_Email", Objemp.Email);
                cmd.Parameters.AddWithValue("@v_EmpDesignation", Objemp.EmpDesignation);
                cmd.Parameters.AddWithValue("@v_Encryptionpassword", Objemp.Encryptionpassword);
                cmd.Parameters.AddWithValue("@v_EmpDepartmenttype", Objemp.EmpDepartmenttype);
                cmd.Parameters.AddWithValue("@v_EmpCode", Objemp.EmpCode);
                cmd.CommandType = System.Data.CommandType.StoredProcedure;
                cmd.Connection = conn;
                using (MySqlDataAdapter sda = new MySqlDataAdapter(cmd))
                {
                    sda.Fill(ds);
                    if (ds.Tables[0].Rows.Count != 0)
                    {
                        for (int y = 0; y < ds.Tables[0].Rows.Count; y++)
                        {
                            Objemp.Empname = Convert.ToString(ds.Tables[0].Rows[y]["Empname"]);
                            Objemp.Email = Convert.ToString(ds.Tables[0].Rows[y]["Email"]);
                            Objemp.EmpCode = Convert.ToString(ds.Tables[0].Rows[y]["EmpCode"]);
                            Objemp.EmpRegistrationPassword = Convert.ToString(ds.Tables[0].Rows[y]["EncryptionPassword"]);
                        }
                        EmailSending(Objemp);
                    }
                }
                conn.Close();
                return RedirectToAction("Home", "Login");
            }
            catch (Exception ex)
            {
                return RedirectToAction("ApplyLeaveView", "Leave");
            }
        }

        public string Encrypt(string clearText)
        {
            string EncryptionKey = "MAKV2SPBNI99212";
            byte[] clearBytes = Encoding.Unicode.GetBytes(clearText);
            using (Aes encryptor = Aes.Create())
            {
                Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] { 0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76 });
                encryptor.Key = pdb.GetBytes(32);
                encryptor.IV = pdb.GetBytes(16);
                using (MemoryStream ms = new MemoryStream())
                {
                    using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateEncryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(clearBytes, 0, clearBytes.Length);
                        cs.Close();
                    }
                    clearText = Convert.ToBase64String(ms.ToArray());
                }
            }
            return clearText;
        }
        private string Decrypt(string cipherText)
        {
            string EncryptionKey = "MAKV2SPBNI99212";
            byte[] cipherBytes = Convert.FromBase64String(cipherText);
            using (Aes encryptor = Aes.Create())
            {
                Rfc2898DeriveBytes pdb = new Rfc2898DeriveBytes(EncryptionKey, new byte[] { 0x49, 0x76, 0x61, 0x6e, 0x20, 0x4d, 0x65, 0x64, 0x76, 0x65, 0x64, 0x65, 0x76 });
                encryptor.Key = pdb.GetBytes(32);
                encryptor.IV = pdb.GetBytes(16);
                using (MemoryStream ms = new MemoryStream())
                {
                    using (CryptoStream cs = new CryptoStream(ms, encryptor.CreateDecryptor(), CryptoStreamMode.Write))
                    {
                        cs.Write(cipherBytes, 0, cipherBytes.Length);
                        cs.Close();
                    }
                    cipherText = Encoding.Unicode.GetString(ms.ToArray());
                }
            }
            return cipherText;
        }
        public string AutogeneratedCode(string empcode)
        {
            //Employee obj = new Employee();
            DataSet ds = new DataSet();
            //string code = "";
            conn = new MySql.Data.MySqlClient.MySqlConnection(myConnectionString);
            conn.Open();
            string query = "EmpCode";
            MySqlCommand cmd = new MySqlCommand(query, conn);
            //cmd.Parameters.AddWithValue("@E_EmpCode", obj.EmpCode);
            cmd.CommandType = CommandType.StoredProcedure;
            using (MySqlDataAdapter sda = new MySqlDataAdapter(cmd))
            {
                sda.Fill(ds);
                conn.Close();
                empcode = Convert.ToString(ds.Tables[0].Rows[0]["E_Empcode"]);
            }
                return empcode;

        }
        public void EmailSending(Employee Objemp)
        {
            //string HTMLBody = string.Empty;
            //using (StreamReader reader = new StreamReader(Server.MapPath("~/Dustbin/HtmlPage1.html")))
            //{
            //    HTMLBody = reader.ReadToEnd();
            //    reader.Close();
            //}
            //HTMLBody = Regex.Replace(HTMLBody, "AITS97", "Empcode");
            //HTMLBody = Regex.Replace(HTMLBody, "@12356", "Emppassword");
            //HTMLBody = Regex.Replace(HTMLBody, "Ramkee", "New Employee");

            //Image myImage = Image.FromFile(@"E:\\Ramkee\\MVCHR\\MVCPayRollApp\\MVCPayRollApp\\Images\\navicon.png");
            //Bitmap bmp = new Bitmap("E:\\Ramkee\\MVCHR\\MVCPayRollApp\\MVCPayRollApp\\Images\\navicon.png");
            Objemp.EmpRegistrationPassword = Decrypt(Objemp.Encryptionpassword);
            StringBuilder sb = new StringBuilder(string.Empty);
            sb.Append("<html>");
            sb.Append("<body>");
            sb.AppendFormat("<div style=" + "border:solid;border-color:#000080" + "><header>");
            sb.Append("<header>");
            sb.Append("<table style=" + "width:100%;background-color:#F4F4F4;color:#000080;" + ">");
            sb.Append("<tr><td style=" + "width:25%;margin-left:10px;" + ">");
            sb.Append("<h1>Avent IT Solutions</h1>");
            sb.Append("</td>");
            sb.Append("<td style=" + "width:75 %;text-align:right" + "><table align=" + "right" + ">");
            sb.Append("<tr><td style=" + "text-align:left;" + ">");
            sb.Append("<h3 style=" + "line-height:10%" + ">Address:</h3>");
            sb.Append("<p style=" + "line-height:3%" + ">Avent IT Solutions</p>");
            sb.Append("<p style=" + "line-height:3%" + ">Modern Profound Tech Park,</p>");
            sb.Append("<p style=" + "line-height:3%" + ">3rd Floor, Office No 303,Kondapur</p>");
            sb.Append("<p style=" + "line-height:3%" + ">Hyderabad,Telangana, India. 500032.</p>");
            sb.Append("</td></tr></table>");
            sb.Append("</td></tr></table></header>");
            sb.Append("<div style=" + "margin-left:10px;" + "><br/><h>Hi " + Objemp.Empname + "</h1>");
            sb.Append("<p>Welcome to Avent portal! Please find your username and password below</p>");
            sb.Append("<p style=" + "line-height:10%;display:inline" + "><b><h3>Your username is:</h3></b>" + Objemp.EmpCode + "</p>");
            sb.Append("<p style=" + "line-height:10%" + "><b><h3>Password is:</h3></b>" + Objemp.EmpRegistrationPassword + "</p>");
            sb.Append("<p>If you have any doubts (or) find any drawbacks in the application, write to us at rgurrala@aventits.com.</p>");
            sb.Append("<p><a href=" + "http://202.65.148.154/" + ">click here</a> to login to the application</p>");
            sb.Append("<br/><br/><p><strong>Regards,</strong></p>");
            sb.Append("<p>Avent Portal</p></div>");
            sb.Append("</div></body></html>");
            try
            {
                MailMessage msg = new MailMessage();
                msg.From = new MailAddress("rgurrala@aventits.com");
                msg.To.Add(Objemp.Email);
                msg.Subject = "Welcome to AventHR";
                msg.Body = sb.ToString();
                msg.IsBodyHtml = true;
                SmtpClient client = new SmtpClient();
                client.Credentials = new NetworkCredential("rgurrala@aventits.com", "Linnu@523A");
                client.Host = "smtp.gmail.com";
                client.Port = 587;
                client.DeliveryMethod = SmtpDeliveryMethod.Network;
                client.EnableSsl = true;
                client.Send(msg);
            }
            catch (Exception ex)
            {

            }

        }
    }
}